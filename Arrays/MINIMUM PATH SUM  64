Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path.

Note: You can only move either down or right at any point in time.

 

Example 1:


Input: grid = [[1,3,1],[1,5,1],[4,2,1]]
Output: 7
Explanation: Because the path 1 → 3 → 1 → 1 → 1 minimizes the sum.
Example 2:

Input: grid = [[1,2,3],[4,5,6]]
Output: 12


SOLUTION :


var minPathSum = function(grid) {

    var m = grid.length;
    var n = grid[0].length;
    
    for (var j = 1; j < n; j++) {
        grid[0][j] = grid[0][j] + grid[0][j - 1];
    }
    
    for (var i = 1; i < m; i++) {
        grid[i][0] = grid[i][0] + grid[i - 1][0];
    }
    
    for (var i = 1; i < m; i++) {
        for (var j = 1; j < n; j++) {
            var above = grid[i - 1][j];
            var left = grid[i][j - 1];
            var min = above < left ? above : left; 
            grid[i][j] = grid[i][j] + min;
        }
    }
    
    return grid[m - 1][n - 1];
    
};
