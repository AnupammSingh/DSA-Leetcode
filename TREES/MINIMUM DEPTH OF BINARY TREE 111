Given a binary tree, find its minimum depth.

The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.

Note: A leaf is a node with no children.

Input: root = [3,9,20,null,null,15,7]
Output: 2

Input: root = [2,null,3,null,4,null,5,null,6]
Output: 5


SOLUTION :

var minDepth = function(root) {

    function findMinDepth(node) {
        if (node === null) {
            return 0;
        }

        if (node.left === null) {
            return findMinDepth(node.right) + 1;
        }

        if (node.right === null) {
            return findMinDepth(node.left) + 1;
        }

        var leftDepth = findMinDepth(node.left);
        var rightDepth = findMinDepth(node.right);

        return (leftDepth < rightDepth ? leftDepth : rightDepth) + 1;
    }

    return findMinDepth(root);
    
};
