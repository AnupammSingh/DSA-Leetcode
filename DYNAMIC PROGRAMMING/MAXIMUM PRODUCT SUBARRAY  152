Given an integer array nums, find a 
subarray
 that has the largest product, and return the product.

The test cases are generated so that the answer will fit in a 32-bit integer.

 

Example 1:

Input: nums = [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.
Example 2:

Input: nums = [-2,0,-1]
Output: 0
Explanation: The result cannot be 2, because [-2,-1] is not a subarray.
 

Constraints:

1 <= nums.length <= 2 * 104
-10 <= nums[i] <= 10
The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.


SOLUTION :


var maxProduct = function(nums) {

    if (nums.length === 0) return 0;

    let max_product = nums[0];
    let min_prod = nums[0];
    let glob_max = nums[0];

    for (let i = 1; i < nums.length; i++) {
        let num = nums[i];

        if (num < 0) {
            let temp = max_product;
            max_product = min_prod;
            min_prod = temp;
        }

        max_product = num > num * max_product ? num : num * max_product;
        min_prod = num < num * min_prod ? num : num * min_prod;

        glob_max = glob_max > max_product ? glob_max : max_product;
    }

    return glob_max;
    
};
