Given two strings s and goal, return true if and only if s can become goal after some number of shifts on s.

A shift on s consists of moving the leftmost character of s to the rightmost position.

For example, if s = "abcde", then it will be "bcdea" after one shift.
 

Example 1:

Input: s = "abcde", goal = "cdeab"
Output: true
Example 2:

Input: s = "abcde", goal = "abced"
Output: false
 

Constraints:

1 <= s.length, goal.length <= 100
s and goal consist of lowercase English letters.


SOLUTION :


var rotateString = function(s, goal) {

    if (s.length !== goal.length) {
        return false;
    }
    
    const doubleS = s + s;
    const n = s.length;
    
    for (let i = 0; i < n; i++) {
        let match = true;
        for (let j = 0; j < n; j++) {
            if (doubleS[i + j] !== goal[j]) {
                match = false;
                break;
            }
        }
        if (match) {
            return true;
        }
    }
    
    return false;
    
};
